// Backend 
	// Phase I
		 // Create a basic server using Express.JS
		 // Create a set of routes for getting and posting table data
		 // Create a set of routes for displaying the HTML pages
		 // Create a basic Express server
	// Phase II
		 // Create a basic Express server
		 // Your server at this point should do the BARE MINIMUM. (Effectively, it should just say: "Listening at PORT 3000" when the command node server.js is run.)
	// Phase III
		 // Create a set of variables (hint: arrays of objects) for holding the reservation and waitlist data
		 //Create a set of routes that then display this data as JSONs. Users should be given these JSONs if they visit the appropriate page (i.e. if a user visits localhost:3000/api/tables they should see a JSON of table data).
	// Phase IV
		 // Create the logic that handles reservation requests. Your code should work such that POST requests take in JSON objects, checks if there is any space left, then adds the JSON object to either the reservation array or the waitlist array. Your POST route should also respond to requests with a confirmation (true or false) of whether or not the requestor has a reservation (or is on the waiting list).
		 // You should be using Postman to do all your testing at this point.

